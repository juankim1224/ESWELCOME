//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB.net.e_sang.api2 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api.e-sang.net/ESNWebService", ConfigurationName="net.e_sang.api2.EsnAPISoap")]
    public interface EsnAPISoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SMSService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SMSService(string[] receiveMobileNumber, string callBack, string sender, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SMSService", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SMSServiceAsync(string[] receiveMobileNumber, string callBack, string sender, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/LMSService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LMSService(string[] receiveMobileNumber, string callBack, string sender, string title, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/LMSService", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LMSServiceAsync(string[] receiveMobileNumber, string callBack, string sender, string title, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WEB.net.e_sang.api2.SendMailResponse SendMail(WEB.net.e_sang.api2.SendMailRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendMail", ReplyAction="*")]
        System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendMailResponse> SendMailAsync(WEB.net.e_sang.api2.SendMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendMailWithReplaceInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WEB.net.e_sang.api2.SendMailWithReplaceInfoResponse SendMailWithReplaceInfo(WEB.net.e_sang.api2.SendMailWithReplaceInfoRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendMailWithReplaceInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendMailWithReplaceInfoResponse> SendMailWithReplaceInfoAsync(WEB.net.e_sang.api2.SendMailWithReplaceInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendMailWithEncodingOption", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WEB.net.e_sang.api2.SendMailWithEncodingOptionResponse SendMailWithEncodingOption(WEB.net.e_sang.api2.SendMailWithEncodingOptionRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendMailWithEncodingOption", ReplyAction="*")]
        System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendMailWithEncodingOptionResponse> SendMailWithEncodingOptionAsync(WEB.net.e_sang.api2.SendMailWithEncodingOptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendMailWithAttachFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WEB.net.e_sang.api2.SendMailWithAttachFilesResponse SendMailWithAttachFiles(WEB.net.e_sang.api2.SendMailWithAttachFilesRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendMailWithAttachFiles", ReplyAction="*")]
        System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendMailWithAttachFilesResponse> SendMailWithAttachFilesAsync(WEB.net.e_sang.api2.SendMailWithAttachFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/GetHolidayList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetHolidayList(string year, string month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/GetHolidayList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetHolidayListAsync(string year, string month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/IsHoliday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsHoliday(string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/IsHoliday", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsHolidayAsync(string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/GetZipCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetZipCode(string dong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/GetZipCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetZipCodeAsync(string dong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/CheckCompanyBusinessStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] CheckCompanyBusinessStatus(string bizNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/CheckCompanyBusinessStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> CheckCompanyBusinessStatusAsync(string bizNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/InqueryJUSO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WEB.net.e_sang.api2.NewJUSOEntry[] InqueryJUSO(string region, int limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/InqueryJUSO", ReplyAction="*")]
        System.Threading.Tasks.Task<WEB.net.e_sang.api2.NewJUSOEntry[]> InqueryJUSOAsync(string region, int limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/InqueryJUSOWithPaging", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WEB.net.e_sang.api2.NewJUSOEntryWithPaging InqueryJUSOWithPaging(string region, int currentPage, int countPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/InqueryJUSOWithPaging", ReplyAction="*")]
        System.Threading.Tasks.Task<WEB.net.e_sang.api2.NewJUSOEntryWithPaging> InqueryJUSOWithPagingAsync(string region, int currentPage, int countPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendBulkMessageInPHP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WEB.net.e_sang.api2.SendBulkMessageInPHPResponse SendBulkMessageInPHP(WEB.net.e_sang.api2.SendBulkMessageInPHPRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendBulkMessageInPHP", ReplyAction="*")]
        System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendBulkMessageInPHPResponse> SendBulkMessageInPHPAsync(WEB.net.e_sang.api2.SendBulkMessageInPHPRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendBulkMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WEB.net.e_sang.api2.SendBulkMessageResponse SendBulkMessage(WEB.net.e_sang.api2.SendBulkMessageRequest request);
        
        // CODEGEN: 작업에 여러 개의 반환 값이 있기 때문에 메시지 계약을 생성하는 중입니다.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.e-sang.net/ESNWebService/SendBulkMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendBulkMessageResponse> SendBulkMessageAsync(WEB.net.e_sang.api2.SendBulkMessageRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public enum BodyFormat {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Html,
        
        /// <remarks/>
        URL,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMail", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendMailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public string fromEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string fromName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=2)]
        public string toMail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=3)]
        public string title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=4)]
        public WEB.net.e_sang.api2.BodyFormat bodyFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=5)]
        public string url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=6)]
        public string contents;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=7)]
        public string smtpServer;
        
        public SendMailRequest() {
        }
        
        public SendMailRequest(string fromEmail, string fromName, string toMail, string title, WEB.net.e_sang.api2.BodyFormat bodyFormat, string url, string contents, string smtpServer) {
            this.fromEmail = fromEmail;
            this.fromName = fromName;
            this.toMail = toMail;
            this.title = title;
            this.bodyFormat = bodyFormat;
            this.url = url;
            this.contents = contents;
            this.smtpServer = smtpServer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailResponse", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendMailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public string status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string message;
        
        public SendMailResponse() {
        }
        
        public SendMailResponse(string status, string message) {
            this.status = status;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithReplaceInfo", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendMailWithReplaceInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public string fromEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string fromName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=2)]
        public string toMail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=3)]
        public string title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=4)]
        public WEB.net.e_sang.api2.BodyFormat bodyFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=5)]
        public string url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=6)]
        public string contents;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=7)]
        public string smtpServer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=8)]
        public string[] keys;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=9)]
        public string[] values;
        
        public SendMailWithReplaceInfoRequest() {
        }
        
        public SendMailWithReplaceInfoRequest(string fromEmail, string fromName, string toMail, string title, WEB.net.e_sang.api2.BodyFormat bodyFormat, string url, string contents, string smtpServer, string[] keys, string[] values) {
            this.fromEmail = fromEmail;
            this.fromName = fromName;
            this.toMail = toMail;
            this.title = title;
            this.bodyFormat = bodyFormat;
            this.url = url;
            this.contents = contents;
            this.smtpServer = smtpServer;
            this.keys = keys;
            this.values = values;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithReplaceInfoResponse", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendMailWithReplaceInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public string status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string message;
        
        public SendMailWithReplaceInfoResponse() {
        }
        
        public SendMailWithReplaceInfoResponse(string status, string message) {
            this.status = status;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithEncodingOption", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendMailWithEncodingOptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public string fromEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string fromName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=2)]
        public string toMail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=3)]
        public string title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=4)]
        public WEB.net.e_sang.api2.BodyFormat bodyFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=5)]
        public string url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=6)]
        public string contents;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=7)]
        public string smtpServer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=8)]
        public string encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=9)]
        public string[] keys;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=10)]
        public string[] values;
        
        public SendMailWithEncodingOptionRequest() {
        }
        
        public SendMailWithEncodingOptionRequest(string fromEmail, string fromName, string toMail, string title, WEB.net.e_sang.api2.BodyFormat bodyFormat, string url, string contents, string smtpServer, string encoding, string[] keys, string[] values) {
            this.fromEmail = fromEmail;
            this.fromName = fromName;
            this.toMail = toMail;
            this.title = title;
            this.bodyFormat = bodyFormat;
            this.url = url;
            this.contents = contents;
            this.smtpServer = smtpServer;
            this.encoding = encoding;
            this.keys = keys;
            this.values = values;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithEncodingOptionResponse", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendMailWithEncodingOptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public string status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string message;
        
        public SendMailWithEncodingOptionResponse() {
        }
        
        public SendMailWithEncodingOptionResponse(string status, string message) {
            this.status = status;
            this.message = message;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public partial class ESNAttachFile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string fileNameField;
        
        private byte[] fileBytesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=1)]
        public byte[] FileBytes {
            get {
                return this.fileBytesField;
            }
            set {
                this.fileBytesField = value;
                this.RaisePropertyChanged("FileBytes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public partial class SendMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string encodingNameField;
        
        private string pickUpUrlField;
        
        private BodyFormat bodyFormatField;
        
        private string titleField;
        
        private string bodyField;
        
        private MessageSendType messageSendTypeField;
        
        private ESNAttachFile[] attachFilesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EncodingName {
            get {
                return this.encodingNameField;
            }
            set {
                this.encodingNameField = value;
                this.RaisePropertyChanged("EncodingName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PickUpUrl {
            get {
                return this.pickUpUrlField;
            }
            set {
                this.pickUpUrlField = value;
                this.RaisePropertyChanged("PickUpUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public BodyFormat BodyFormat {
            get {
                return this.bodyFormatField;
            }
            set {
                this.bodyFormatField = value;
                this.RaisePropertyChanged("BodyFormat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("Body");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public MessageSendType MessageSendType {
            get {
                return this.messageSendTypeField;
            }
            set {
                this.messageSendTypeField = value;
                this.RaisePropertyChanged("MessageSendType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public ESNAttachFile[] AttachFiles {
            get {
                return this.attachFilesField;
            }
            set {
                this.attachFilesField = value;
                this.RaisePropertyChanged("AttachFiles");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public enum MessageSendType {
        
        /// <remarks/>
        EMAIL,
        
        /// <remarks/>
        SMS,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MessageReceiver))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MessageSender))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public partial class MessagePerson : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string emailField;
        
        private string emailDisplayNameField;
        
        private string mobileNoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string EmailDisplayName {
            get {
                return this.emailDisplayNameField;
            }
            set {
                this.emailDisplayNameField = value;
                this.RaisePropertyChanged("EmailDisplayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MobileNo {
            get {
                return this.mobileNoField;
            }
            set {
                this.mobileNoField = value;
                this.RaisePropertyChanged("MobileNo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public partial class MessageReceiver : MessagePerson {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public partial class MessageSender : MessagePerson {
        
        private CINFO cINFOField;
        
        private string userKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CINFO CINFO {
            get {
                return this.cINFOField;
            }
            set {
                this.cINFOField = value;
                this.RaisePropertyChanged("CINFO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserKey {
            get {
                return this.userKeyField;
            }
            set {
                this.userKeyField = value;
                this.RaisePropertyChanged("UserKey");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public enum CINFO {
        
        /// <remarks/>
        ESN,
        
        /// <remarks/>
        MESSE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public partial class NewJUSOEntryWithPaging : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int totalRowCountField;
        
        private string errorMessageField;
        
        private NewJUSOEntry[] jusoEntriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int TotalRowCount {
            get {
                return this.totalRowCountField;
            }
            set {
                this.totalRowCountField = value;
                this.RaisePropertyChanged("TotalRowCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public NewJUSOEntry[] JusoEntries {
            get {
                return this.jusoEntriesField;
            }
            set {
                this.jusoEntriesField = value;
                this.RaisePropertyChanged("JusoEntries");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.e-sang.net/ESNWebService")]
    public partial class NewJUSOEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string zIPCODEField;
        
        private string rOAD_ADDRESSField;
        
        private string jIBUN_ADDRESSField;
        
        private string eNG_ADDRESSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ZIPCODE {
            get {
                return this.zIPCODEField;
            }
            set {
                this.zIPCODEField = value;
                this.RaisePropertyChanged("ZIPCODE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ROAD_ADDRESS {
            get {
                return this.rOAD_ADDRESSField;
            }
            set {
                this.rOAD_ADDRESSField = value;
                this.RaisePropertyChanged("ROAD_ADDRESS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string JIBUN_ADDRESS {
            get {
                return this.jIBUN_ADDRESSField;
            }
            set {
                this.jIBUN_ADDRESSField = value;
                this.RaisePropertyChanged("JIBUN_ADDRESS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ENG_ADDRESS {
            get {
                return this.eNG_ADDRESSField;
            }
            set {
                this.eNG_ADDRESSField = value;
                this.RaisePropertyChanged("ENG_ADDRESS");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithAttachFiles", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendMailWithAttachFilesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public string fromEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string fromName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=2)]
        public string toMail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=3)]
        public string title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=4)]
        public WEB.net.e_sang.api2.BodyFormat bodyFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=5)]
        public string url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=6)]
        public string contents;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=7)]
        public string smtpServer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=8)]
        public string encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=9)]
        public string[] keys;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=10)]
        public string[] values;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=11)]
        public string cc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=12)]
        public string bcc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=13)]
        public WEB.net.e_sang.api2.ESNAttachFile[] attachFiles;
        
        public SendMailWithAttachFilesRequest() {
        }
        
        public SendMailWithAttachFilesRequest(string fromEmail, string fromName, string toMail, string title, WEB.net.e_sang.api2.BodyFormat bodyFormat, string url, string contents, string smtpServer, string encoding, string[] keys, string[] values, string cc, string bcc, WEB.net.e_sang.api2.ESNAttachFile[] attachFiles) {
            this.fromEmail = fromEmail;
            this.fromName = fromName;
            this.toMail = toMail;
            this.title = title;
            this.bodyFormat = bodyFormat;
            this.url = url;
            this.contents = contents;
            this.smtpServer = smtpServer;
            this.encoding = encoding;
            this.keys = keys;
            this.values = values;
            this.cc = cc;
            this.bcc = bcc;
            this.attachFiles = attachFiles;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithAttachFilesResponse", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendMailWithAttachFilesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public string status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string message;
        
        public SendMailWithAttachFilesResponse() {
        }
        
        public SendMailWithAttachFilesResponse(string status, string message) {
            this.status = status;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendBulkMessageInPHP", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendBulkMessageInPHPRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public string userKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public WEB.net.e_sang.api2.CINFO info;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=2)]
        public WEB.net.e_sang.api2.MessagePerson sender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=3)]
        public WEB.net.e_sang.api2.MessagePerson[] lstReceivePerson;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=4)]
        public WEB.net.e_sang.api2.SendMessage sendMessage;
        
        public SendBulkMessageInPHPRequest() {
        }
        
        public SendBulkMessageInPHPRequest(string userKey, WEB.net.e_sang.api2.CINFO info, WEB.net.e_sang.api2.MessagePerson sender, WEB.net.e_sang.api2.MessagePerson[] lstReceivePerson, WEB.net.e_sang.api2.SendMessage sendMessage) {
            this.userKey = userKey;
            this.info = info;
            this.sender = sender;
            this.lstReceivePerson = lstReceivePerson;
            this.sendMessage = sendMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendBulkMessageInPHPResponse", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendBulkMessageInPHPResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public bool SendBulkMessageInPHPResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string message;
        
        public SendBulkMessageInPHPResponse() {
        }
        
        public SendBulkMessageInPHPResponse(bool SendBulkMessageInPHPResult, string message) {
            this.SendBulkMessageInPHPResult = SendBulkMessageInPHPResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendBulkMessage", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendBulkMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public WEB.net.e_sang.api2.MessageSender sender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public WEB.net.e_sang.api2.MessageReceiver[] lstReceiver;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=2)]
        public WEB.net.e_sang.api2.SendMessage sendMessage;
        
        public SendBulkMessageRequest() {
        }
        
        public SendBulkMessageRequest(WEB.net.e_sang.api2.MessageSender sender, WEB.net.e_sang.api2.MessageReceiver[] lstReceiver, WEB.net.e_sang.api2.SendMessage sendMessage) {
            this.sender = sender;
            this.lstReceiver = lstReceiver;
            this.sendMessage = sendMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendBulkMessageResponse", WrapperNamespace="http://api.e-sang.net/ESNWebService", IsWrapped=true)]
    public partial class SendBulkMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=0)]
        public bool SendBulkMessageResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.e-sang.net/ESNWebService", Order=1)]
        public string message;
        
        public SendBulkMessageResponse() {
        }
        
        public SendBulkMessageResponse(bool SendBulkMessageResult, string message) {
            this.SendBulkMessageResult = SendBulkMessageResult;
            this.message = message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EsnAPISoapChannel : WEB.net.e_sang.api2.EsnAPISoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EsnAPISoapClient : System.ServiceModel.ClientBase<WEB.net.e_sang.api2.EsnAPISoap>, WEB.net.e_sang.api2.EsnAPISoap {
        
        public EsnAPISoapClient() {
        }
        
        public EsnAPISoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EsnAPISoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EsnAPISoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EsnAPISoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SMSService(string[] receiveMobileNumber, string callBack, string sender, string message) {
            return base.Channel.SMSService(receiveMobileNumber, callBack, sender, message);
        }
        
        public System.Threading.Tasks.Task<string> SMSServiceAsync(string[] receiveMobileNumber, string callBack, string sender, string message) {
            return base.Channel.SMSServiceAsync(receiveMobileNumber, callBack, sender, message);
        }
        
        public string LMSService(string[] receiveMobileNumber, string callBack, string sender, string title, string message) {
            return base.Channel.LMSService(receiveMobileNumber, callBack, sender, title, message);
        }
        
        public System.Threading.Tasks.Task<string> LMSServiceAsync(string[] receiveMobileNumber, string callBack, string sender, string title, string message) {
            return base.Channel.LMSServiceAsync(receiveMobileNumber, callBack, sender, title, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WEB.net.e_sang.api2.SendMailResponse WEB.net.e_sang.api2.EsnAPISoap.SendMail(WEB.net.e_sang.api2.SendMailRequest request) {
            return base.Channel.SendMail(request);
        }
        
        public string SendMail(string fromEmail, string fromName, string toMail, string title, WEB.net.e_sang.api2.BodyFormat bodyFormat, string url, string contents, string smtpServer, out string message) {
            WEB.net.e_sang.api2.SendMailRequest inValue = new WEB.net.e_sang.api2.SendMailRequest();
            inValue.fromEmail = fromEmail;
            inValue.fromName = fromName;
            inValue.toMail = toMail;
            inValue.title = title;
            inValue.bodyFormat = bodyFormat;
            inValue.url = url;
            inValue.contents = contents;
            inValue.smtpServer = smtpServer;
            WEB.net.e_sang.api2.SendMailResponse retVal = ((WEB.net.e_sang.api2.EsnAPISoap)(this)).SendMail(inValue);
            message = retVal.message;
            return retVal.status;
        }
        
        public System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendMailResponse> SendMailAsync(WEB.net.e_sang.api2.SendMailRequest request) {
            return base.Channel.SendMailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WEB.net.e_sang.api2.SendMailWithReplaceInfoResponse WEB.net.e_sang.api2.EsnAPISoap.SendMailWithReplaceInfo(WEB.net.e_sang.api2.SendMailWithReplaceInfoRequest request) {
            return base.Channel.SendMailWithReplaceInfo(request);
        }
        
        public string SendMailWithReplaceInfo(string fromEmail, string fromName, string toMail, string title, WEB.net.e_sang.api2.BodyFormat bodyFormat, string url, string contents, string smtpServer, string[] keys, string[] values, out string message) {
            WEB.net.e_sang.api2.SendMailWithReplaceInfoRequest inValue = new WEB.net.e_sang.api2.SendMailWithReplaceInfoRequest();
            inValue.fromEmail = fromEmail;
            inValue.fromName = fromName;
            inValue.toMail = toMail;
            inValue.title = title;
            inValue.bodyFormat = bodyFormat;
            inValue.url = url;
            inValue.contents = contents;
            inValue.smtpServer = smtpServer;
            inValue.keys = keys;
            inValue.values = values;
            WEB.net.e_sang.api2.SendMailWithReplaceInfoResponse retVal = ((WEB.net.e_sang.api2.EsnAPISoap)(this)).SendMailWithReplaceInfo(inValue);
            message = retVal.message;
            return retVal.status;
        }
        
        public System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendMailWithReplaceInfoResponse> SendMailWithReplaceInfoAsync(WEB.net.e_sang.api2.SendMailWithReplaceInfoRequest request) {
            return base.Channel.SendMailWithReplaceInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WEB.net.e_sang.api2.SendMailWithEncodingOptionResponse WEB.net.e_sang.api2.EsnAPISoap.SendMailWithEncodingOption(WEB.net.e_sang.api2.SendMailWithEncodingOptionRequest request) {
            return base.Channel.SendMailWithEncodingOption(request);
        }
        
        public string SendMailWithEncodingOption(string fromEmail, string fromName, string toMail, string title, WEB.net.e_sang.api2.BodyFormat bodyFormat, string url, string contents, string smtpServer, string encoding, string[] keys, string[] values, out string message) {
            WEB.net.e_sang.api2.SendMailWithEncodingOptionRequest inValue = new WEB.net.e_sang.api2.SendMailWithEncodingOptionRequest();
            inValue.fromEmail = fromEmail;
            inValue.fromName = fromName;
            inValue.toMail = toMail;
            inValue.title = title;
            inValue.bodyFormat = bodyFormat;
            inValue.url = url;
            inValue.contents = contents;
            inValue.smtpServer = smtpServer;
            inValue.encoding = encoding;
            inValue.keys = keys;
            inValue.values = values;
            WEB.net.e_sang.api2.SendMailWithEncodingOptionResponse retVal = ((WEB.net.e_sang.api2.EsnAPISoap)(this)).SendMailWithEncodingOption(inValue);
            message = retVal.message;
            return retVal.status;
        }
        
        public System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendMailWithEncodingOptionResponse> SendMailWithEncodingOptionAsync(WEB.net.e_sang.api2.SendMailWithEncodingOptionRequest request) {
            return base.Channel.SendMailWithEncodingOptionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WEB.net.e_sang.api2.SendMailWithAttachFilesResponse WEB.net.e_sang.api2.EsnAPISoap.SendMailWithAttachFiles(WEB.net.e_sang.api2.SendMailWithAttachFilesRequest request) {
            return base.Channel.SendMailWithAttachFiles(request);
        }
        
        public string SendMailWithAttachFiles(string fromEmail, string fromName, string toMail, string title, WEB.net.e_sang.api2.BodyFormat bodyFormat, string url, string contents, string smtpServer, string encoding, string[] keys, string[] values, string cc, string bcc, WEB.net.e_sang.api2.ESNAttachFile[] attachFiles, out string message) {
            WEB.net.e_sang.api2.SendMailWithAttachFilesRequest inValue = new WEB.net.e_sang.api2.SendMailWithAttachFilesRequest();
            inValue.fromEmail = fromEmail;
            inValue.fromName = fromName;
            inValue.toMail = toMail;
            inValue.title = title;
            inValue.bodyFormat = bodyFormat;
            inValue.url = url;
            inValue.contents = contents;
            inValue.smtpServer = smtpServer;
            inValue.encoding = encoding;
            inValue.keys = keys;
            inValue.values = values;
            inValue.cc = cc;
            inValue.bcc = bcc;
            inValue.attachFiles = attachFiles;
            WEB.net.e_sang.api2.SendMailWithAttachFilesResponse retVal = ((WEB.net.e_sang.api2.EsnAPISoap)(this)).SendMailWithAttachFiles(inValue);
            message = retVal.message;
            return retVal.status;
        }
        
        public System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendMailWithAttachFilesResponse> SendMailWithAttachFilesAsync(WEB.net.e_sang.api2.SendMailWithAttachFilesRequest request) {
            return base.Channel.SendMailWithAttachFilesAsync(request);
        }
        
        public string GetHolidayList(string year, string month) {
            return base.Channel.GetHolidayList(year, month);
        }
        
        public System.Threading.Tasks.Task<string> GetHolidayListAsync(string year, string month) {
            return base.Channel.GetHolidayListAsync(year, month);
        }
        
        public bool IsHoliday(string date) {
            return base.Channel.IsHoliday(date);
        }
        
        public System.Threading.Tasks.Task<bool> IsHolidayAsync(string date) {
            return base.Channel.IsHolidayAsync(date);
        }
        
        public System.Data.DataTable GetZipCode(string dong) {
            return base.Channel.GetZipCode(dong);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetZipCodeAsync(string dong) {
            return base.Channel.GetZipCodeAsync(dong);
        }
        
        public string[] CheckCompanyBusinessStatus(string bizNo) {
            return base.Channel.CheckCompanyBusinessStatus(bizNo);
        }
        
        public System.Threading.Tasks.Task<string[]> CheckCompanyBusinessStatusAsync(string bizNo) {
            return base.Channel.CheckCompanyBusinessStatusAsync(bizNo);
        }
        
        public WEB.net.e_sang.api2.NewJUSOEntry[] InqueryJUSO(string region, int limit) {
            return base.Channel.InqueryJUSO(region, limit);
        }
        
        public System.Threading.Tasks.Task<WEB.net.e_sang.api2.NewJUSOEntry[]> InqueryJUSOAsync(string region, int limit) {
            return base.Channel.InqueryJUSOAsync(region, limit);
        }
        
        public WEB.net.e_sang.api2.NewJUSOEntryWithPaging InqueryJUSOWithPaging(string region, int currentPage, int countPerPage) {
            return base.Channel.InqueryJUSOWithPaging(region, currentPage, countPerPage);
        }
        
        public System.Threading.Tasks.Task<WEB.net.e_sang.api2.NewJUSOEntryWithPaging> InqueryJUSOWithPagingAsync(string region, int currentPage, int countPerPage) {
            return base.Channel.InqueryJUSOWithPagingAsync(region, currentPage, countPerPage);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WEB.net.e_sang.api2.SendBulkMessageInPHPResponse WEB.net.e_sang.api2.EsnAPISoap.SendBulkMessageInPHP(WEB.net.e_sang.api2.SendBulkMessageInPHPRequest request) {
            return base.Channel.SendBulkMessageInPHP(request);
        }
        
        public bool SendBulkMessageInPHP(string userKey, WEB.net.e_sang.api2.CINFO info, WEB.net.e_sang.api2.MessagePerson sender, WEB.net.e_sang.api2.MessagePerson[] lstReceivePerson, WEB.net.e_sang.api2.SendMessage sendMessage, out string message) {
            WEB.net.e_sang.api2.SendBulkMessageInPHPRequest inValue = new WEB.net.e_sang.api2.SendBulkMessageInPHPRequest();
            inValue.userKey = userKey;
            inValue.info = info;
            inValue.sender = sender;
            inValue.lstReceivePerson = lstReceivePerson;
            inValue.sendMessage = sendMessage;
            WEB.net.e_sang.api2.SendBulkMessageInPHPResponse retVal = ((WEB.net.e_sang.api2.EsnAPISoap)(this)).SendBulkMessageInPHP(inValue);
            message = retVal.message;
            return retVal.SendBulkMessageInPHPResult;
        }
        
        public System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendBulkMessageInPHPResponse> SendBulkMessageInPHPAsync(WEB.net.e_sang.api2.SendBulkMessageInPHPRequest request) {
            return base.Channel.SendBulkMessageInPHPAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WEB.net.e_sang.api2.SendBulkMessageResponse WEB.net.e_sang.api2.EsnAPISoap.SendBulkMessage(WEB.net.e_sang.api2.SendBulkMessageRequest request) {
            return base.Channel.SendBulkMessage(request);
        }
        
        public bool SendBulkMessage(WEB.net.e_sang.api2.MessageSender sender, WEB.net.e_sang.api2.MessageReceiver[] lstReceiver, WEB.net.e_sang.api2.SendMessage sendMessage, out string message) {
            WEB.net.e_sang.api2.SendBulkMessageRequest inValue = new WEB.net.e_sang.api2.SendBulkMessageRequest();
            inValue.sender = sender;
            inValue.lstReceiver = lstReceiver;
            inValue.sendMessage = sendMessage;
            WEB.net.e_sang.api2.SendBulkMessageResponse retVal = ((WEB.net.e_sang.api2.EsnAPISoap)(this)).SendBulkMessage(inValue);
            message = retVal.message;
            return retVal.SendBulkMessageResult;
        }
        
        public System.Threading.Tasks.Task<WEB.net.e_sang.api2.SendBulkMessageResponse> SendBulkMessageAsync(WEB.net.e_sang.api2.SendBulkMessageRequest request) {
            return base.Channel.SendBulkMessageAsync(request);
        }
    }
}
